"""empty message

Revision ID: fe01780e5791
Revises: 50f90b4b414f
Create Date: 2022-08-17 13:45:48.024371

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

import app.util.sqlalchemy
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = 'fe01780e5791'
down_revision = '50f90b4b414f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('Beleidsdoel_Ambities',
        sa.Column('Beleidsdoel_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
        sa.Column('Ambitie_UUID', mssql.UNIQUEIDENTIFIER(), nullable=False),
        sa.Column('Koppeling_Omschrijving', sa.String(collation='SQL_Latin1_General_CP1_CI_AS'), nullable=True),
        sa.ForeignKeyConstraint(['Ambitie_UUID'], ['Ambities.UUID'], name=op.f('FK_Beleidsdoel_Ambities_Ambitie_UUID')),
        sa.ForeignKeyConstraint(['Beleidsdoel_UUID'], ['Beleidsdoelen.UUID'], name=op.f('FK_Beleidsdoel_Ambities_Beleidsdoel_UUID')),
        sa.PrimaryKeyConstraint('Beleidsdoel_UUID', 'Ambitie_UUID', name=op.f('PK_Beleidsdoel_Ambities'))
    )

    op.drop_table('Beleidskeuze_Ambities')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Beleidsdoel_Ambities')

    op.create_table('Beleidskeuze_Ambities',
        sa.Column('Beleidskeuze_UUID', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
        sa.Column('Ambitie_UUID', mssql.UNIQUEIDENTIFIER(), autoincrement=False, nullable=False),
        sa.Column('Koppeling_Omschrijving', sa.VARCHAR(collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['Ambitie_UUID'], ['Ambities.UUID'], name='FK_Beleidskeuze_Ambities_Ambitie_UUID'),
        sa.ForeignKeyConstraint(['Beleidskeuze_UUID'], ['Beleidskeuzes.UUID'], name='FK_Beleidskeuze_Ambities_Beleidskeuze_UUID'),
        sa.PrimaryKeyConstraint('Beleidskeuze_UUID', 'Ambitie_UUID', name='PK_Beleidskeuze_Ambities')
    )

    # ### end Alembic commands ###


def dialect_supports_sequences():
    return op._proxy.migration_context.dialect.supports_sequences


def dialect_supports_geometry_index():
    return op._proxy.migration_context.dialect.name == 'mssql'


def create_seq(name):
    if dialect_supports_sequences():
        op.execute(sa.schema.CreateSequence(sa.schema.Sequence(name)))


def drop_seq(name):
    if dialect_supports_sequences():
        op.execute(sa.schema.DropSequence(sa.schema.Sequence(name)))
