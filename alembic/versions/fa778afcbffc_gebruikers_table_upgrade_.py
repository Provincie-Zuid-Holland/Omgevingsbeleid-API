"""Gebruikers table upgrade

Revision ID: fa778afcbffc
Revises: a26a0e7d8262
Create Date: 2023-09-26 08:55:23.740083

"""
from alembic import op
import sqlalchemy as sa

# We need these to load all sqlalchemy tables
from app.main import app  ## noqa 
from app.core.db import table_metadata  ## noqa 
from app.core.settings import settings  ## noqa 



# revision identifiers, used by Alembic.
revision = 'fa778afcbffc'
down_revision = 'a26a0e7d8262'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('uq_gebruikers_email', 'Gebruikers', ['Email'])
    op.add_column('Gebruikers', sa.Column('Last_Login_Date', sa.DateTime(), nullable=True))
    op.add_column('Gebruikers', sa.Column('Created_Date', sa.DateTime(), nullable=True))
    op.add_column('Gebruikers', sa.Column('Modified_Date', sa.DateTime(), nullable=True))
    op.add_column('Gebruikers', sa.Column('Is_Active', sa.Boolean(), nullable=False))

    # Set Is_Active based on the status
    gebruikers = sa.table('Gebruikers', 
                       sa.column('Status', sa.String()), 
                       sa.column('Is_Active', sa.Boolean()))
    op.execute(
        gebruikers.update().where(gebruikers.c.Status == "Active")
        .values(Is_Active=True)
    )
    op.execute(
        gebruikers.update().where(gebruikers.c.Status != "Active")
        .values(Is_Active=False)
    )
    

    op.drop_column('Gebruikers', 'Status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_gebruikers_email', 'Gebruikers', type_='unique')
    op.add_column('Gebruikers', sa.Column('Status', sa.NVARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('Gebruikers', 'Modified_Date')
    op.drop_column('Gebruikers', 'Created_Date')
    op.drop_column('Gebruikers', 'Last_Login_Date')
    op.drop_column('Gebruikers', 'Is_Active')
    # ### end Alembic commands ###
