import glob
import importlib
import os
from typing import List
import uuid
from datetime import datetime

from sqlalchemy.orm import Session

from app.api.domains.users import Security
from app.api.domains.werkingsgebieden.repositories.area_geometry_repository import AreaGeometryRepository
from app.api.domains.werkingsgebieden.repositories.geometry_repository import GeometryRepository
from app.core.utils.utils import DATE_FORMAT
from app.tests.fixtures.types import FixtureContext, FixtureType


class CollectedFixtures:
    def __init__(self):
        self._fixtures: List[FixtureType] = []

    def add(self, fixtures: List[FixtureType]):
        self._fixtures = self._fixtures + fixtures


class Fixtures:
    def __init__(
        self,
        session: Session,
        geometry_repository: GeometryRepository,
        area_geometry_repository: AreaGeometryRepository,
        security: Security,
    ):
        self._session: Session = session
        self._security: Security = security
        self._context: FixtureContext = FixtureContext(security=security)
        self._geometry_repository: GeometryRepository = geometry_repository
        self._area_geometry_repository: AreaGeometryRepository = area_geometry_repository

    def load(self) -> None:
        fixture_dir = os.path.join(os.path.dirname(__file__), "data")
        fixture_files = sorted(glob.glob(os.path.join(fixture_dir, "*.py")))

        fixture_collection: CollectedFixtures = CollectedFixtures()

        for path in fixture_files:
            mod = self._import_fixture_module(path)
            data = self._extract_fixture_data(mod, self._context)
            if not data:
                continue

            fixture_collection.add(data)

            # self._session.add_all(data)
            # self._session.commit()

        self._create_source_werkingsgebieden()
        self._create_areas()

    def _create_source_werkingsgebieden(self):
        self._geometry_repository.add_werkingsgebied(
            session=self._session,
            uuidx=uuid.UUID("00000000-0009-0000-0000-000000000001"),
            idx=1,
            title="Maatwerkgebied glastuinbouw",
            text_shape="POLYGON ((74567.347600001842 443493.91890000325, 74608.622699998392 443619.86080000486, 74661.431899998352 443796.90439999942, 74657.325500000254 443794.78040000005, 74664.067999999956 443810.51300000178, 74729.171500001146 444013.33940000291, 74754.307000000073 444217.06900000118, 74766.111800000086 444287.24220000062, 74700.32570000003 444274.74290000094, 74617.775499999538 444246.9616000005, 74514.7938000001 444196.70150000026, 74448.482099998742 444165.69250000105, 74333.605200000064 444112.87550000072, 74204.86380000037 444067.32080000057, 74148.195700000957 444071.55770000169, 74232.0122999996 443919.14220000163, 74294.7186000012 443819.92320000188, 74402.363600000725 443672.54520000424, 74411.650600001187 443659.83020000259, 74518.027399998187 443515.38720000343, 74567.347600001842 443493.91890000325))",
            gml="""<gml:Surface xmlns:gml="http://www.opengis.net/gml/3.2" gml:id="id-1191eed9-d9ab-4184-a6a1-056c13752390-1" srsName="urn:ogc:def:crs:EPSG::28992" srsDimension="2"><gml:patches><gml:PolygonPatch><gml:exterior><gml:LinearRing><gml:posList>93329.43 428509.174 93324.139 428489.33 93275.191 428468.163 92726.179 428235.329 92515.835 428130.819 92374.282 428055.412 92248.605 427991.912 92003.865 427886.079 91921.844 427855.652 91748.542 427815.964 91642.708 427789.506 91591.114 427785.537 91481.312 427761.724 91419.135 427808.026 91252.447 427937.672 91177.041 427986.62 91159.843 428028.954 91112.218 428067.319 90867.477 428248.558 90572.466 428476.101 90461.341 428560.767 90413.716 428592.517 90355.508 428612.361 90333.018 428612.361 90073.726 428562.09 90048.59 428567.382 89773.423 428654.695 89586.891 428722.164 89358.027 428797.57 89203.245 428842.549 89000.838 428904.065 88815.63 428963.596 88541.785 429061.492 88520.619 429072.076 88512.681 429087.951 88478.285 429273.159 88459.764 429312.847 88450.504 429346.582 88498.129 429362.457 88619.837 429411.405 88614.546 429447.123 88644.973 429447.123 88662.171 429441.832 88748.161 429526.499 88814.307 429575.447 88851.348 429596.613 88912.203 429609.843 89106.672 429607.197 89137.099 429575.447 89183.401 429572.801 89395.068 429575.447 89674.204 429568.832 89929.528 429555.603 89946.726 429552.957 90039.33 429521.207 90131.934 429496.071 90236.445 429477.551 90346.247 429456.384 90409.747 429441.832 90433.56 429440.509 90466.633 429447.123 90516.904 429462.998 90597.602 429480.196 90710.05 429509.301 90747.092 429519.884 90826.467 429537.082 90973.311 429566.186 90977.28 429588.676 90777.519 429773.885 90573.789 429976.291 90322.435 430121.151 90209.986 430184.651 90190.143 430196.557 90183.528 430213.755 90213.955 430241.536 90223.216 430295.776 90225.862 430332.818 90221.893 430360.599 90208.664 430385.735 90182.205 430420.131 90170.299 430445.266 90151.778 430525.964 90139.872 430575.574 90493.091 430682.73 90674.331 430734.324 90695.498 430709.188 90769.846 430638.545 91029.138 430357.027 91130.738 430312.577 91231.28 430214.152 91270.439 430214.681 91286.314 430204.098 91287.372 430186.106 91283.139 430169.173 91475.756 429977.614 91640.856 429827.86 91844.056 429653.234 91958.357 429548.459 92093.824 429495.542 92342.532 429387.592 92570.075 429307.688 92648.391 429264.296 92717.183 429247.363 92785.975 429217.729 92843.125 429175.396 92929.909 429075.912 92957.425 429038.341 92995.525 428955.791 93051.617 428894.408 93099.242 428867.949 93153.217 428858.424 93161.684 428791.749 93329.43 428509.174</gml:posList></gml:LinearRing></gml:exterior></gml:PolygonPatch></gml:patches></gml:Surface>""",
            symbol="ES227",
            created_date=datetime(2023, 2, 2, 2, 2, 2),
            modified_date=datetime(2023, 2, 2, 2, 2, 2),
            start_validity=datetime(2023, 2, 2, 2, 2, 2),
            end_validity=datetime(2099, 2, 2, 2, 2, 2),
        )
        self._session.commit()

    def _create_areas(self):
        self._area_geometry_repository.create_area(
            session=self._session,
            uuidx=uuid.UUID("00000000-0009-0000-0001-000000000001"),
            created_date=datetime(2023, 2, 2, 2, 2, 2),
            created_by_uuid=uuid.UUID("11111111-0000-0000-0000-000000000001"),
            werkingsgebied={
                "UUID": "00000000-0009-0000-0000-000000000001",
                "ID": 1,
                "Title": "Maatwerkgebied glastuinbouw",
                "Symbol": "ES227",
                "Geometry": "POLYGON ((74567.347600001842 443493.91890000325, 74608.622699998392 443619.86080000486, 74661.431899998352 443796.90439999942, 74657.325500000254 443794.78040000005, 74664.067999999956 443810.51300000178, 74729.171500001146 444013.33940000291, 74754.307000000073 444217.06900000118, 74766.111800000086 444287.24220000062, 74700.32570000003 444274.74290000094, 74617.775499999538 444246.9616000005, 74514.7938000001 444196.70150000026, 74448.482099998742 444165.69250000105, 74333.605200000064 444112.87550000072, 74204.86380000037 444067.32080000057, 74148.195700000957 444071.55770000169, 74232.0122999996 443919.14220000163, 74294.7186000012 443819.92320000188, 74402.363600000725 443672.54520000424, 74411.650600001187 443659.83020000259, 74518.027399998187 443515.38720000343, 74567.347600001842 443493.91890000325))",
                "GML": """<gml:Surface xmlns:gml="http://www.opengis.net/gml/3.2" gml:id="id-1191eed9-d9ab-4184-a6a1-056c13752390-1" srsName="urn:ogc:def:crs:EPSG::28992" srsDimension="2"><gml:patches><gml:PolygonPatch><gml:exterior><gml:LinearRing><gml:posList>93329.43 428509.174 93324.139 428489.33 93275.191 428468.163 92726.179 428235.329 92515.835 428130.819 92374.282 428055.412 92248.605 427991.912 92003.865 427886.079 91921.844 427855.652 91748.542 427815.964 91642.708 427789.506 91591.114 427785.537 91481.312 427761.724 91419.135 427808.026 91252.447 427937.672 91177.041 427986.62 91159.843 428028.954 91112.218 428067.319 90867.477 428248.558 90572.466 428476.101 90461.341 428560.767 90413.716 428592.517 90355.508 428612.361 90333.018 428612.361 90073.726 428562.09 90048.59 428567.382 89773.423 428654.695 89586.891 428722.164 89358.027 428797.57 89203.245 428842.549 89000.838 428904.065 88815.63 428963.596 88541.785 429061.492 88520.619 429072.076 88512.681 429087.951 88478.285 429273.159 88459.764 429312.847 88450.504 429346.582 88498.129 429362.457 88619.837 429411.405 88614.546 429447.123 88644.973 429447.123 88662.171 429441.832 88748.161 429526.499 88814.307 429575.447 88851.348 429596.613 88912.203 429609.843 89106.672 429607.197 89137.099 429575.447 89183.401 429572.801 89395.068 429575.447 89674.204 429568.832 89929.528 429555.603 89946.726 429552.957 90039.33 429521.207 90131.934 429496.071 90236.445 429477.551 90346.247 429456.384 90409.747 429441.832 90433.56 429440.509 90466.633 429447.123 90516.904 429462.998 90597.602 429480.196 90710.05 429509.301 90747.092 429519.884 90826.467 429537.082 90973.311 429566.186 90977.28 429588.676 90777.519 429773.885 90573.789 429976.291 90322.435 430121.151 90209.986 430184.651 90190.143 430196.557 90183.528 430213.755 90213.955 430241.536 90223.216 430295.776 90225.862 430332.818 90221.893 430360.599 90208.664 430385.735 90182.205 430420.131 90170.299 430445.266 90151.778 430525.964 90139.872 430575.574 90493.091 430682.73 90674.331 430734.324 90695.498 430709.188 90769.846 430638.545 91029.138 430357.027 91130.738 430312.577 91231.28 430214.152 91270.439 430214.681 91286.314 430204.098 91287.372 430186.106 91283.139 430169.173 91475.756 429977.614 91640.856 429827.86 91844.056 429653.234 91958.357 429548.459 92093.824 429495.542 92342.532 429387.592 92570.075 429307.688 92648.391 429264.296 92717.183 429247.363 92785.975 429217.729 92843.125 429175.396 92929.909 429075.912 92957.425 429038.341 92995.525 428955.791 93051.617 428894.408 93099.242 428867.949 93153.217 428858.424 93161.684 428791.749 93329.43 428509.174</gml:posList></gml:LinearRing></gml:exterior></gml:PolygonPatch></gml:patches></gml:Surface>""",
                "Start_Validity": datetime(2023, 2, 2, 2, 2, 2).strftime(DATE_FORMAT)[:23],
                "End_Validity": datetime(2099, 2, 2, 2, 2, 2).strftime(DATE_FORMAT)[:23],
                "Created_Date": datetime(2023, 2, 2, 2, 2, 2).strftime(DATE_FORMAT)[:23],
                "Modified_Date": datetime(2023, 2, 2, 2, 2, 2).strftime(DATE_FORMAT)[:23],
            },
        )
        self._session.commit()

    def _import_fixture_module(self, path: str):
        spec = importlib.util.spec_from_file_location("fixture_module", path)
        mod = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(mod)
        return mod

    def _extract_fixture_data(self, module, context: FixtureContext):
        if hasattr(module, "fixtures"):
            return module.fixtures(context)
        return None
