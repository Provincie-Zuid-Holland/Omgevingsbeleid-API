"""thematische en gebiedsprogramma deel 3

Revision ID: abf6d713759e
Revises: be6494cadae2
Create Date: 2022-09-06 12:11:03.755909

"""
from alembic import op
import sqlalchemy as sa
import Api.Utils
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = 'abf6d713759e'
down_revision = 'be6494cadae2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('Gebiedsprogrammas', sa.Column('Eigenaar_1', mssql.UNIQUEIDENTIFIER(), nullable=True))
    op.add_column('Gebiedsprogrammas', sa.Column('Eigenaar_2', mssql.UNIQUEIDENTIFIER(), nullable=True))
    op.add_column('Gebiedsprogrammas', sa.Column('Portefeuillehouder_1', mssql.UNIQUEIDENTIFIER(), nullable=True))
    op.add_column('Gebiedsprogrammas', sa.Column('Portefeuillehouder_2', mssql.UNIQUEIDENTIFIER(), nullable=True))
    op.add_column('Gebiedsprogrammas', sa.Column('Opdrachtgever', mssql.UNIQUEIDENTIFIER(), nullable=True))
    op.add_column('Gebiedsprogrammas', sa.Column('Weblink', sa.Unicode(length=200), nullable=True))
    op.add_column('Gebiedsprogrammas', sa.Column('Besluitnummer', sa.Unicode(), nullable=True))
    op.create_foreign_key(op.f('FK_Gebiedsprogrammas_Portefeuillehouder_1'), 'Gebiedsprogrammas', 'Gebruikers', ['Portefeuillehouder_1'], ['UUID'])
    op.create_foreign_key(op.f('FK_Gebiedsprogrammas_Eigenaar_1'), 'Gebiedsprogrammas', 'Gebruikers', ['Eigenaar_1'], ['UUID'])
    op.create_foreign_key(op.f('FK_Gebiedsprogrammas_Portefeuillehouder_2'), 'Gebiedsprogrammas', 'Gebruikers', ['Portefeuillehouder_2'], ['UUID'])
    op.create_foreign_key(op.f('FK_Gebiedsprogrammas_Eigenaar_2'), 'Gebiedsprogrammas', 'Gebruikers', ['Eigenaar_2'], ['UUID'])
    op.create_foreign_key(op.f('FK_Gebiedsprogrammas_Opdrachtgever'), 'Gebiedsprogrammas', 'Gebruikers', ['Opdrachtgever'], ['UUID'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('FK_Gebiedsprogrammas_Opdrachtgever'), 'Gebiedsprogrammas', type_='foreignkey')
    op.drop_constraint(op.f('FK_Gebiedsprogrammas_Eigenaar_2'), 'Gebiedsprogrammas', type_='foreignkey')
    op.drop_constraint(op.f('FK_Gebiedsprogrammas_Portefeuillehouder_2'), 'Gebiedsprogrammas', type_='foreignkey')
    op.drop_constraint(op.f('FK_Gebiedsprogrammas_Eigenaar_1'), 'Gebiedsprogrammas', type_='foreignkey')
    op.drop_constraint(op.f('FK_Gebiedsprogrammas_Portefeuillehouder_1'), 'Gebiedsprogrammas', type_='foreignkey')
    op.drop_column('Gebiedsprogrammas', 'Besluitnummer')
    op.drop_column('Gebiedsprogrammas', 'Weblink')
    op.drop_column('Gebiedsprogrammas', 'Opdrachtgever')
    op.drop_column('Gebiedsprogrammas', 'Portefeuillehouder_2')
    op.drop_column('Gebiedsprogrammas', 'Portefeuillehouder_1')
    op.drop_column('Gebiedsprogrammas', 'Eigenaar_2')
    op.drop_column('Gebiedsprogrammas', 'Eigenaar_1')
    # ### end Alembic commands ###


def dialect_supports_sequences():
    return op._proxy.migration_context.dialect.supports_sequences


def dialect_supports_geometry_index():
    return op._proxy.migration_context.dialect.name == 'mssql'


def create_seq(name):
    if dialect_supports_sequences():
       op.execute(sa.schema.CreateSequence(sa.schema.Sequence(name)))


def drop_seq(name):
    if dialect_supports_sequences():
       op.execute(sa.schema.DropSequence(sa.schema.Sequence(name)))
